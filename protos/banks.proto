syntax = "proto3";

package banking;

// Bank Service Definition
service BankService {
  // Customer-to-Branch Interfaces
  rpc MsgDelivery(Request) returns (Response);
  rpc Query (QueryRequest) returns (QueryResponse) {}
  rpc Deposit (DepositRequest) returns (DepositResponse) {}
  rpc Withdraw (WithdrawRequest) returns (WithdrawResponse) {}

  // Branch-to-Branch Interfaces
  rpc PropagateDeposit (PropagateRequest) returns (PropagateResponse) {}
  rpc PropagateWithdraw (PropagateRequest) returns (PropagateResponse) {}
}

// Query Request and Response
message QueryRequest {
  int32 customer_id = 1;        // Unique customer ID
  repeated int32 writeset = 2;  // Writeset to track write operations
}

message QueryResponse {
  int32 balance = 1;            // Current balance
  repeated int32 writeset = 2;  // Updated writeset
}

// Deposit Request and Response
message DepositRequest {
  int32 customer_id = 1;        // Unique customer ID
  int32 amount = 2;             // Amount to deposit
  repeated int32 writeset = 3;  // Writeset to track write operations
}

message DepositResponse {
  string result = 1;            // Result of the operation ("success", "fail")
  repeated int32 writeset = 2;  // Updated writeset
}

// Withdraw Request and Response
message WithdrawRequest {
  int32 customer_id = 1;        // Unique customer ID
  int32 amount = 2;             // Amount to withdraw
  repeated int32 writeset = 3;  // Writeset to track write operations
}

message WithdrawResponse {
  string result = 1;            // Result of the operation ("success", "fail")
  repeated int32 writeset = 2;  // Updated writeset
}

// Propagation Request and Response (for Deposit/Withdraw)
message PropagateRequest {
  int32 branch_id = 1;          // Source branch ID
  int32 amount = 2;             // Amount to propagate
  repeated int32 writeset = 3;  // Writeset to track write operations
}

message PropagateResponse {
  string result = 1;            // Result of the propagation ("success", "fail")
  repeated int32 writeset = 2;  // Updated writeset
}

message Request {
  int32 id = 1;                // Unique ID for the request
  string interface = 2;        // Request type (e.g., "query", "deposit", "withdraw")
  int32 money = 3;             // Amount of money for deposit/withdraw
  int32 dest = 4;              // Target branch ID
  repeated int32 writeset = 5; // Writeset for client consistency
}

message Response {
  string interface = 1;        // Response type
  string result = 2;           // Result ("success" or "fail")
  int32 balance = 3;           // Balance for queries
  repeated int32 writeset = 4; // Updated writeset
}
